name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

#      - name: Cache SonarCloud packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

#      - name: Build and analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.PR_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew build test jacocoTestReport sonarqube --info


      - name: Build v2
        run: ./gradlew clean build

      - name: Build Docker
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REGISTRY_ALIAS: j4b6b6c4
          ECR_REPOSITROY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t project-api .
          echo "Tagging Docker Image"
          docker tag project-api:latest $ECR_REGISTRY/$REGISTRY_ALIAS/project-api:$IMAGE_TAG
          docker tag project-api:latest $ECR_REGISTRY/$REGISTRY_ALIAS/project-api:latest
          echo "Pushing image to ECR"
          docker push $ECR_REGISTRY/$REGISTRY_ALIAS/project-api:$IMAGE_TAG
          docker push $ECR_REGISTRY/$REGISTRY_ALIAS/project-api:latest
          echo "name=image::$ECR_REGISTRY/project-api:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials for ECS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: us-east-2

      - name: Deploy ECS Task Definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: task-definition.json
          service: project-api
          cluster: arn:aws:ecs:us-east-2:071571530772:cluster/project-management
        env:
          ACTIONS_STEP_DEBUG: true
